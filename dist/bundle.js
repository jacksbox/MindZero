!function(t){var s={};function e(i){if(s[i])return s[i].exports;var n=s[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=t,e.c=s,e.d=function(t,s,i){e.o(t,s)||Object.defineProperty(t,s,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,s){if(1&s&&(t=e(t)),8&s)return t;if(4&s&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&s&&"string"!=typeof t)for(var n in t)e.d(i,n,function(s){return t[s]}.bind(null,n));return i},e.n=function(t){var s=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(s,"a",s),s},e.o=function(t,s){return Object.prototype.hasOwnProperty.call(t,s)},e.p="",e(e.s=0)}([function(t,s,e){"use strict";e.r(s);const i=(t,s)=>Math.random()*s+t;let n=0;class a{constructor(t=499){this.directions=new Array(500).fill(null).map(()=>({x:i(0,2)-1,y:i(0,2)-1})),this.step=0,this.maxStep=t,this.id=n++}next(){this.step++}get(){return{x:this.directions[this.step].x,y:this.directions[this.step].y}}clone(){const t=new a;return t.directions=this.directions.map(({x:t,y:s})=>({x:t,y:s})),t}mutate(t){const s=t?.005:.01;let e=0;this.directions=this.directions.map(t=>e>0||Math.random()<s?(e=e>0?e--:0,{x:i(0,2)-1,y:i(0,2)-1}):t)}}var o=a;const h=(t,s)=>{t.x+=s.x,t.y+=s.y},r=(t,s)=>t>s?s:t<-s?-s:t;class l{constructor(t,s,e,i){this.start={x:t,y:s},this.size=4,this.pos={x:t,y:s},this.vel={x:0,y:0},this.ctx=e,this.brain=new o(i),this.dead=!1,this.goal=!1,this.fitness=0,this.champ=!1,this.isRandom=!1,this.hitObstacle=!1,this.hasHitGoal=!1}draw(t){this.ctx.beginPath(),this.ctx.arc(this.pos.x-this.size/2,this.pos.y-this.size/2,this.size,0,2*Math.PI),this.champ?this.ctx.fillStyle="green":this.isRandom?this.ctx.fillStyle="purple":this.ctx.fillStyle=t,this.ctx.fill()}update(){this.dead||this.goal||(this.move(),(this.pos.x<0||this.pos.x>800||this.pos.y<0||this.pos.y>800)&&(this.dead=!0),this.pos.x>=100&&this.pos.x<=700&&this.pos.y>=300&&this.pos.y<=310&&(this.dead=!0,this.hitObstacle=!0),Math.abs(this.pos.x-400)<6&&Math.abs(this.pos.y-80)<6&&(this.goal=!0))}move(){var t,s;this.brain.step!==this.brain.maxStep?(h(this.vel,this.brain.get()),t=this.vel,s=4,t.x=r(t.x,s),t.y=r(t.y,s),h(this.pos,this.vel),this.brain.next()):this.dead=!0}calcFitness(){var t,s;this.fitness=this.goal?1:1/Math.pow((t=this.pos,s={x:400,y:80},Math.sqrt(Math.pow(t.x-s.x,2)+Math.pow(t.y-s.y,2))),2),this.hitObstacle?this.fitness/=2:this.goal&&(this.fitness=1.5*this.fitness+100/(this.brain.step*this.brain.step))}getChild(t){const s=new l(this.start.x,this.start.y,this.ctx);return s.brain=this.brain.clone(),s.brain.maxStep=t,s.hasHitGoal=this.goal,s}mutate(){this.brain.mutate(this.hasHitGoal)}}var c=l;var d=new class{constructor(){this.gen=0}update(...t){document.getElementById("gen").innerHTML=this.gen,t.forEach(t=>{document.getElementById(t.color).innerHTML=t.bestSteps})}createDiv(t){const s=document.createElement("div");s.id=t,s.style=`color: ${t}; padding: 10px`,document.getElementById("steps").appendChild(s)}};var p=class{constructor(t,s,e){this.size=t,this.ctx=s,this.color=e,this.dots=new Array(this.size).fill(null).map(()=>new c(400,700,this.ctx));d.createDiv(e)}evolve(){this.calcFitness(),this.calcFitnessSum();const t=this.selectBest(),s=Math.min(Math.floor(1.2*(t.goal?t.brain.step:t.brain.maxStep)),499),e=t.getChild(s);e.brain.id=t.brain.id,e.champ=!0,this.bestSteps=t.goal?t.brain.step:t.brain.maxStep,this.dots=this.dots.map(()=>this.selectParent().getChild(s)),this.mutate(),this.dots[this.dots.length-1]=e}mutate(){this.dots.forEach(t=>t.mutate())}selectBest(){let t=this.dots[0];const s=this.dots.length;for(let e=1;e<s;e++)this.dots[e].fitness>t.fitness&&(t=this.dots[e]);return d.minSteps=t.goal?t.brain.step:"-",t}selectParent(){const t=(s=this.fitnessSum,Math.random()*s);var s;let e=0;const i=this.dots.length;for(let s=0;s<i;s++)if(e+=this.dots[s].fitness,e>t)return this.dots[s]}calcFitness(){this.dots.forEach(t=>t.calcFitness())}calcFitnessSum(){this.fitnessSum=this.dots.reduce((t,s)=>t+s.fitness,0)}update(){this.dots.forEach(t=>t.update())}draw(){this.dots.forEach(t=>t.draw(this.color))}allStopped(){const t=this.dots.length;for(let s=0;s<t;s++)if(!this.dots[s].dead&&!this.dots[s].goal)return!1;return!0}};const u=document.getElementById("canvas").getContext("2d");let f=new p(500,u,"purple"),m=new p(500,u,"black"),x=new p(500,u,"orange");d.update();const y=()=>{f.allStopped()&m.allStopped()?(f.evolve(),m.evolve(),x.evolve(),d.gen++,d.update(f,m,x)):(u.clearRect(0,0,800,800),u.beginPath(),u.rect(100,300,600,10,2*Math.PI),u.fillStyle="blue",u.fill(),u.beginPath(),u.arc(400,80,6,0,2*Math.PI),u.fillStyle="red",u.fill(),f.update(),m.update(),x.update(),f.draw(),m.draw(),x.draw()),window.requestAnimationFrame(y)};y()}]);